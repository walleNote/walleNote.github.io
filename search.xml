<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[CPP深入研究智能指针]]></title>
    <url>%2F2018%2F01%2F01%2Fcpp_smart_ptr%2F</url>
    <content type="text"><![CDATA[创建和使用unique_ptr实例A unique_ptr不会共享它的指针。 无法将它复制到另一个unique_ptr，（除非它是可修改rvalue） 通过值传递给函数，或需要对其进行复制的任何标准模板库 (STL) 算法中使用。 A unique_ptr只能移动。 这意味着内存资源的所有权将转移到新的unique_ptr和原始unique_ptr不再拥有它。 我们建议您将一个对象限制为一个所有者，因为拥有多个程序逻辑增加复杂性。 因此，当您需要为普通的 C++ 对象的智能指针，使用unique_ptr。 下图说明了两个转让所有权unique_ptr实例。 移动 unique_ptr 的所有权unique_ptr在中定义 STL 中的标头。 它是完全有效与原始指针，可以使用 STL 容器中。 添加unique_ptr是有效的实例的 STL 容器因为移动构造函数的unique_ptr不需要复制操作。 unique_ptr 创建和使用shared_ptr实例shared_ptr 类型是智能指针在为方案设计多个所有者可能必须管理对象生存期内存中的 C++ 标准库中。 在初始化可以将它复制的 shared_ptr 后，将它在函数参数的值，并将其分配给其他 shared_ptr 实例。 所有实例指向同一对象，并且，对“的共享访问控制块”该引用计数的增量和减量，每当新 shared_ptr 添加，超出范围或重新设置。 当引用计数达到零时，控制块删除内存资源和自身。 下图显示了指向个内存位置的几 shared_ptr 实例。 创建和使用weak_ptr实例有时，对象必须存储访问基础对象的一种方法shared_ptr而不会导致引用计数将增加。 通常情况下，这种情况发生时之间的循环引用shared_ptr实例。 最好的设计是尽可能避免共享的所有权的指针。 但是，如果您必须有共享的所有权shared_ptr实例，避免它们之间的循环引用。 当循环引用是不可避免的或甚至更可取，由于某种原因时，使用weak_ptr为一个或多个所有者提供弱引用到另一个shared_ptr。 通过使用weak_ptr，您可以创建shared_ptr的加入现有集相关的实例，但这仅基础内存资源是否仍然有效。 A weak_ptr本身不参与将引用计数，因此，它不能阻止的引用计数到零。但是，您可以使用weak_ptr来试图获得一份新的shared_ptr使用的初始化。 如果内存已被删除， bad_weak_ptr ，则引发异常。 如果内存仍然有效，新共享的指针增加引用计数，并可保证内存是有效，只要shared_ptr变量可用。]]></content>
      <categories>
        <category>CPP</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>CPP</tag>
        <tag>Smart Pointers</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
